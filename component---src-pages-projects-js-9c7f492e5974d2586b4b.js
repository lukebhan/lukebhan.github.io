"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[853],{9302:function(e,t,a){a.d(t,{Z:function(){return r}});var l=a(7294),s="header-module--headerMenu--r9FAo";function r(e){return l.createElement("div",{className:"header-module--header--4dQNe"},l.createElement("div",{className:"header-module--top--wMUWA"},l.createElement("a",{className:"header-module--name--7hJ0e",href:"../"},"Luke Bhan")),l.createElement("div",null,l.createElement("ul",{className:s},e.headerProps.map((function(e){return l.createElement("li",{className:s},l.createElement("a",{href:e.link},e.name))})))))}},7744:function(e,t,a){a.r(t),a.d(t,{default:function(){return i}});var l=a(7294),s=a(9302),r=a(8904);function i(){return l.createElement("div",{class:r.Md},l.createElement(s.Z,{headerProps:[{link:"../",name:"About"},{link:"../research",name:"Research"},{link:"../projects",name:"Projects"},{link:"../experience",name:"Experience"},{link:"../publications",name:"Publications"}]}),l.createElement("div",{class:r.o3},l.createElement("p",{class:r.d1}," Here are a bunch of personal projects I have either built or collaborated on. They are usually educational exercises (MIT License) and are all available on my ",l.createElement("a",{href:"https://github.com/lukebhan/",class:r.Q6}," github"),". These projects are listed from most recent start date as a software project never ends :)."),l.createElement("div",{class:r.fL},l.createElement("p",{class:r.Fs}," Chord, a distributed hash table ")),l.createElement("div",{class:r.hT},l.createElement("p",{class:r.Fs}," July 2020 "),l.createElement("p",{class:r.d1}," ",l.createElement("a",{href:"https://github.com/lukebhan/chord",class:r.Q6}," Chord, available here"),". ")),l.createElement("div",{class:r.fL},l.createElement("ul",{class:r.d1},l.createElement("li",null," Chord is a distributed hash table using the famous protocol outlined ",l.createElement("a",{href:"https://pdos.csail.mit.edu/papers/chord:sigcomm01/chord_sigcomm.pdf",class:r.Q6},"here"),". It allows users to store data(key/value stores) across multiple nodes with O(logn) lookup time."),l.createElement("li",null," This implementation was written in C++."))),l.createElement("div",{class:r.fL},l.createElement("p",{class:r.Fs}," Lit, a git implementation ")),l.createElement("div",{class:r.hT},l.createElement("p",{class:r.Fs}," June 2020 "),l.createElement("p",{class:r.d1}," ",l.createElement("a",{href:"https://github.com/lukebhan/lit",class:r.Q6}," Lit, available here"),".")),l.createElement("div",{class:r.fL},l.createElement("ul",{class:r.d1},l.createElement("li",null," This project is an implementaiton of git using Rust. It has the ability to make simple git commands such as commit as well as the ability to push to github."))),l.createElement("div",{class:r.fL},l.createElement("p",{class:r.Fs}," Slide, a static expression optimizer ")),l.createElement("div",{class:r.hT},l.createElement("p",{class:r.Fs}," April 2020 "),l.createElement("p",{class:r.d1}," ",l.createElement("a",{href:"https://github.com/yslide/slide",class:r.Q6}," Slide, available here"),". This project was built in collaboration with ",l.createElement("a",{href:"https://github.com/ayazhafiz/",class:r.Q6},"ayaz hafiz"),". Check him out! ")),l.createElement("div",{class:r.fL},l.createElement("ul",{class:r.d1},l.createElement("li",null," This project allows users to specify a set of rules to simplfiy their mathematical expressions such as x+0 -> x"),l.createElement("li",null," Similar to wolfram alpha; however, ultimately users will select the rules they want to simplify in a general form such as a+0 -> a will simplify all situations where 0 is added to just the variable."),l.createElement("li",null," This project is completely written in Rust with the UI being written using Golang and Vue.js."))),l.createElement("div",{class:r.fL},l.createElement("p",{class:r.Fs}," Numlib, an arbitrary precision numerical library ")),l.createElement("div",{class:r.hT},l.createElement("p",{class:r.Fs}," April 2020 "),l.createElement("p",{class:r.d1}," ",l.createElement("a",{href:"https://github.com/lukebhan/numlib",class:r.Q6}," Numlib, available here"),".")),l.createElement("div",{class:r.fL},l.createElement("ul",{class:r.d1},l.createElement("li",null," Numlib is an aribitray precision library for integers and floats implemented in rust."),l.createElement("li",null," Numlib is a zero-dependency library including its own Fast Fourier Transform, Complex Number implementation and of course, an abitrary precision integer.")))))}},8904:function(e,t,a){a.d(t,{Md:function(){return l},o3:function(){return s},d1:function(){return r},Fs:function(){return i},_u:function(){return n},fL:function(){return c},hT:function(){return o},Q6:function(){return u},qQ:function(){return m},dv:function(){return d},FO:function(){return h}});var l="list-module--page--wa01K",s="list-module--padding--3HOok",r="list-module--body--HbPqR",i="list-module--header--RiHQh",n="list-module--subheader--Oo7-U",c="list-module--text--D9USy",o="list-module--date--wwbIj",u="list-module--red--aVhnU",m="list-module--udvideo--uW6Cw",d="list-module--noBullets--iHB5Z",h="list-module--pubs--kGXFU"}}]);
//# sourceMappingURL=component---src-pages-projects-js-9c7f492e5974d2586b4b.js.map