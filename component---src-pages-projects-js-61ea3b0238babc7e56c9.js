(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"16l3":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return c}));var l=t("q1tI"),r=t.n(l),s=t("kSfl"),n=t("9/01"),i=t.n(n);function c(){return r.a.createElement("div",{class:i.a.page},r.a.createElement(s.a,{headerProps:[{link:"../",name:"About"},{link:"../research",name:"Research"},{link:"../projects",name:"Projects"},{link:"../experience",name:"Experience"},{link:"../youtube",name:"Youtube"}]}),r.a.createElement("div",{class:i.a.padding},r.a.createElement("p",{class:i.a.body}," Here are a bunch of personal projects I have either built or collaborated on. They are usually educational exercises (MIT License) and are all available on my ",r.a.createElement("a",{href:"https://github.com/lukebhan/",class:i.a.red}," github"),". These projects are listed from most recent start date as a software project never ends :)."),r.a.createElement("div",{class:i.a.text},r.a.createElement("p",{class:i.a.header}," Chord, a distributed hash table ")),r.a.createElement("div",{class:i.a.date},r.a.createElement("p",{class:i.a.header}," July 2020 "),r.a.createElement("p",{class:i.a.body}," ",r.a.createElement("a",{href:"https://github.com/lukebhan/chord",class:i.a.red}," Chord, available here"),". ")),r.a.createElement("div",{class:i.a.text},r.a.createElement("ul",{class:i.a.body},r.a.createElement("li",null," Chord is a distributed hash table using the famous protocol outlined ",r.a.createElement("a",{href:"https://pdos.csail.mit.edu/papers/chord:sigcomm01/chord_sigcomm.pdf",class:i.a.red},"here"),". It allows users to store data(key/value stores) across multiple nodes with O(logn) lookup time."),r.a.createElement("li",null," This implementation was written in C++."))),r.a.createElement("div",{class:i.a.text},r.a.createElement("p",{class:i.a.header}," Lit, a git implementation ")),r.a.createElement("div",{class:i.a.date},r.a.createElement("p",{class:i.a.header}," June 2020 "),r.a.createElement("p",{class:i.a.body}," ",r.a.createElement("a",{href:"https://github.com/lukebhan/lit",class:i.a.red}," Lit, available here"),".")),r.a.createElement("div",{class:i.a.text},r.a.createElement("ul",{class:i.a.body},r.a.createElement("li",null," This project is an implementaiton of git using Rust. It has the ability to make simple git commands such as commit as well as the ability to push to github."))),r.a.createElement("div",{class:i.a.text},r.a.createElement("p",{class:i.a.header}," Slide, a static expression optimizer ")),r.a.createElement("div",{class:i.a.date},r.a.createElement("p",{class:i.a.header}," April 2020 "),r.a.createElement("p",{class:i.a.body}," ",r.a.createElement("a",{href:"https://github.com/yslide/slide",class:i.a.red}," Slide, available here"),". This project was built in collaboration with ",r.a.createElement("a",{href:"https://github.com/ayazhafiz/",class:i.a.red},"ayaz hafiz"),". Check him out! ")),r.a.createElement("div",{class:i.a.text},r.a.createElement("ul",{class:i.a.body},r.a.createElement("li",null," This project allows users to specify a set of rules to simplfiy their mathematical expressions such as x+0 -> x"),r.a.createElement("li",null," Similar to wolfram alpha; however, ultimately users will select the rules they want to simplify in a general form such as a+0 -> a will simplify all situations where 0 is added to just the variable."),r.a.createElement("li",null," This project is completely written in Rust with the UI being written using Golang and Vue.js."))),r.a.createElement("div",{class:i.a.text},r.a.createElement("p",{class:i.a.header}," Numlib, an arbitrary precision numerical library ")),r.a.createElement("div",{class:i.a.date},r.a.createElement("p",{class:i.a.header}," April 2020 "),r.a.createElement("p",{class:i.a.body}," ",r.a.createElement("a",{href:"https://github.com/lukebhan/numlib",class:i.a.red}," Numlib, available here"),".")),r.a.createElement("div",{class:i.a.text},r.a.createElement("ul",{class:i.a.body},r.a.createElement("li",null," Numlib is an aribitray precision library for integers and floats implemented in rust."),r.a.createElement("li",null," Numlib is a zero-dependency library including its own Fast Fourier Transform, Complex Number implementation and of course, an abitrary precision integer.")))))}},"9/01":function(e,a,t){e.exports={page:"list-module--page--2U96m",padding:"list-module--padding--37F9a",body:"list-module--body--V8FE-",header:"list-module--header--1kABN",text:"list-module--text--2-H3m",date:"list-module--date--FVYPA",red:"list-module--red--1_K3a",udvideo:"list-module--udvideo--3tEZ7",center:"list-module--center--21sCl"}},OGtf:function(e,a,t){var l=t("XKFU"),r=t("eeVq"),s=t("vhPU"),n=/"/g,i=function(e,a,t,l){var r=String(s(e)),i="<"+a;return""!==t&&(i+=" "+t+'="'+String(l).replace(n,"&quot;")+'"'),i+">"+r+"</"+a+">"};e.exports=function(e,a){var t={};t[e]=a(i),l(l.P+l.F*r((function(){var a=""[e]('"');return a!==a.toLowerCase()||a.split('"').length>3})),"String",t)}},Wmhb:function(e,a,t){e.exports={header:"header-module--header--3QwAt",top:"header-module--top--15CBN",name:"header-module--name--2LGeQ",headerMenu:"header-module--headerMenu--3Y57n"}},kSfl:function(e,a,t){"use strict";t.d(a,"a",(function(){return i}));t("tUrg"),t("f3/d");var l=t("q1tI"),r=t.n(l),s=t("Wmhb"),n=t.n(s);function i(e){return r.a.createElement("div",{className:n.a.header},r.a.createElement("div",{className:n.a.top},r.a.createElement("a",{className:n.a.name,href:"../"},"Luke Bhan")),r.a.createElement("div",{className:n.a.center},r.a.createElement("ul",{className:n.a.headerMenu},e.headerProps.map((function(e){return r.a.createElement("li",{className:n.a.headerMenu},r.a.createElement("a",{className:n.a.link,href:e.link},e.name))})))))}},tUrg:function(e,a,t){"use strict";t("OGtf")("link",(function(e){return function(a){return e(this,"a","href",a)}}))}}]);
//# sourceMappingURL=component---src-pages-projects-js-61ea3b0238babc7e56c9.js.map